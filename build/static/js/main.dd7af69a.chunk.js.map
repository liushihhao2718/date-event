{"version":3,"sources":["calendar.js","App.js","serviceWorker.js","index.js"],"names":["CalendarException","message","this","toString","constructor","name","Calendar","firstWeekDay","prototype","weekStartDate","date","startDate","Date","getTime","getDay","setDate","getDate","monthDates","year","month","dayFormatter","weekFormatter","weeks","week","i","push","getMonth","getFullYear","monthDays","monthText","now","s","length","join","months","split","events","link","title","EventDiary","props","ListGroup","map","ev","Item","href","makeCalendarArray","d","text","slice","sameMonth","hasEvent","includes","formatDate","flat","day","changeMonth","change","newDate","setMonth","console","log","toLocaleDateString","MonthTitle","className","DayBlock","handleClick","x","onClick","days","key","dateTime","style","color","RightArrow","width","height","viewBox","fill","xmlns","fillRule","LeftArrow","App","useState","showEvent","setShowEvent","buttonStyle","display","alignSelf","Button","toLocaleString","handleShow","Modal","show","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.dd7af69a.chunk.js","sourcesContent":["/*!\r\n * calendar.js: inspired by the calendar module from Python\r\n * Copyright(c) 2011 Luciano Ramalho <luciano@ramalho.org>\r\n * MIT Licensed\r\n */\r\n\r\nexport const version = '0.1.0';\r\n\r\nlet CalendarException = function CalendarException(message) {\r\n   this.message = message;\r\n   this.toString = function() {\r\n      return this.constructor.name + \": \" + this.message\r\n   };\r\n}\r\n\r\nexport function Calendar(firstWeekDay) {\r\n    //properties\r\n    this.firstWeekDay = firstWeekDay || 0; // 0 = Sunday\r\n};\r\n\r\nCalendar.prototype = {\r\n    constructor : Calendar,\r\n    weekStartDate : function weekStartDate(date) {\r\n        let startDate = new Date(date.getTime());\r\n        while (startDate.getDay() !== this.firstWeekDay) {\r\n            startDate.setDate(startDate.getDate() - 1);\r\n        }\r\n        return startDate;\r\n    },\r\n    monthDates : function monthDates(year, month, dayFormatter, weekFormatter) {\r\n        if ((typeof year !== \"number\") || (year < 1970)) {\r\n            throw new CalendarException('year must be a number >= 1970');\r\n        };\r\n        if ((typeof month !== \"number\") || (month < 0) || (month > 11)) {\r\n            throw new CalendarException('month must be a number (Jan is 0)');\r\n        };\r\n        let weeks = [],\r\n            week = [],\r\n            i = 0,\r\n            date = this.weekStartDate(new Date(year, month, 1));\r\n        do {\r\n            for (i=0; i<7; i++) {\r\n                week.push(dayFormatter ? dayFormatter(date) : date);\r\n                date = new Date(date.getTime());\r\n                date.setDate(date.getDate() + 1);\r\n            }\r\n            weeks.push(weekFormatter ? weekFormatter(week) : week);\r\n            week = [];\r\n        } while ((date.getMonth()<=month) && (date.getFullYear()===year));\r\n        return weeks;\r\n    },\r\n    monthDays : function monthDays(year, month) {\r\n        let getDayOrZero = function getDayOrZero(date) {\r\n            return date.getMonth() === month ? date.getDate() : 0;\r\n        };\r\n        return this.monthDates(year, month, getDayOrZero);\r\n    },\r\n    monthText : function monthText(year, month) {\r\n        if (typeof year === \"undefined\") {\r\n            let now = new Date();\r\n            year = now.getFullYear();\r\n            month = now.getMonth();\r\n        };\r\n        let getDayOrBlank = function getDayOrBlank(date) {\r\n            let s = date.getMonth() === month ? date.getDate().toString() : \"  \";\r\n            while (s.length < 2) s = \" \"+s;\r\n            return s;\r\n        };\r\n        let weeks = this.monthDates(year, month, getDayOrBlank,\r\n            function (week) { return week.join(\" \") });\r\n        return weeks.join(\"\\n\");\r\n    }\r\n};\r\nlet months = \"JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC\".split(\" \");\r\nfor (let i=0; i<months.length; i++)\r\n    Calendar[months[i]] = i;","import React, { useState } from \"react\";\nimport { Calendar } from \"./calendar.js\";\nimport { Button, Modal, ListGroup } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nconst events = [\n  { date: \"2020-08-23\", link: \"https://www.google.com\", title: \"Google\" },\n  { date: \"2020-08-23\", link: \"https://www.yahoo.com\", title: \"Yahoo\" },\n  { date: \"2020-08-24\", link: \"https://www.facebook.com\", title: \"Facebook\" },\n];\n\nfunction App() {\n  const [date, setDate] = useState(new Date());\n  const [showEvent, setShowEvent] = useState(null);\n  \n  const handleClose = () => setShowEvent(null);\n  const handleShow = (d) => setShowEvent(d);\n\n  const buttonStyle = {\n    display: \"flex\",\n    alignSelf: \"center\",\n  };\n\n  return (\n    <>\n      <main className=\"px-0 px-md-5 pt-3 pb-1 pb-md-5\">\n        <div className=\"calendar\">\n          <div className=\"month-indicator\">\n            <Button\n              className=\"btn-secondary\"\n              style={buttonStyle}\n              onClick={() => setDate(changeMonth(date, -1))}\n            >\n              <LeftArrow />\n            </Button>\n            <time>\n              {date.getFullYear()}\n              {\" / \"}\n              {date.toLocaleString(\"zh-tw\", { month: \"long\" })}\n            </time>\n            <Button\n              className=\"btn-secondary\"\n              style={buttonStyle}\n              onClick={() => setDate(changeMonth(date, 1))}\n            >\n              <RightArrow />\n            </Button>\n          </div>\n\n          <MonthTitle />\n          <DayBlock\n            month={makeCalendarArray(date)}\n            onClick={(d) => {\n              handleShow(d)\n            }}\n          />\n        </div>\n      </main>\n      <Modal show={showEvent !== null} onHide={handleClose}\n      className=\"pb-5\"\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered>\n        <Modal.Header closeButton>\n          <Modal.Title>{formatDate(showEvent)}</Modal.Title>\n        </Modal.Header>\n          <Modal.Body closeButton>\n            <EventDiary events={events.filter(ev=>ev.date === formatDate(showEvent))}/>\n          </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nfunction EventDiary(props){\n  const {events} = props;\n  return (\n    <ListGroup>\n      {\n        events.map(ev=>{\n          return(\n            <ListGroup.Item>\n              <p>{ev.title}</p>\n              <p><a href={ev.link}>{ev.link}</a></p>\n            </ListGroup.Item>\n          )\n        })\n      }\n  </ListGroup>\n  )\n}\n\n/**\n *\n * @param {Date} date\n * @returns {{date:Date,text:string,sameMonth:boolean,hasEvent:boolean}}\n */\nfunction makeCalendarArray(date) {\n  const cal = new Calendar();\n\n  let m = cal\n    .monthDates(date.getFullYear(), date.getMonth(), (d) => {\n      return {\n        date: d,\n        text: (\" \" + d.getDate()).slice(-2),\n        sameMonth: date.getMonth() === d.getMonth(),\n        hasEvent: events.map((ev) => ev.date).includes(formatDate(d)),\n      };\n    })\n    .flat();\n  return m;\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [year, month, day].join(\"-\");\n}\n\nfunction changeMonth(d = new Date(), change = 0) {\n  const newDate = new Date(d);\n  if (change !== 0) newDate.setMonth(newDate.getMonth() + change);\n  console.log(newDate.toLocaleDateString());\n  return newDate;\n}\n\nfunction MonthTitle() {\n  return (\n    <div className=\"day-of-week\">\n      <div>Su</div>\n      <div>Mo</div>\n      <div>Tu</div>\n      <div>We</div>\n      <div>Th</div>\n      <div>Fr</div>\n      <div>Sa</div>\n    </div>\n  );\n}\n\nfunction DayBlock(props) {\n  const timeStyle = (day) => {\n    return {\n      color: day.sameMonth ? \"var(--blue-grey-600)\" : \"lightgray\",\n    };\n  };\n\n  const handleClick = (x) => {\n    if (x.hasEvent) onClick(x.date.toLocaleDateString());\n  };\n\n  const { month, onClick } = props;\n  const days = month.map((x) => {\n    return (\n      <button\n        className={x.hasEvent ? \"has-event\" : \"\"}\n        key={x.date.toLocaleDateString()}\n        onClick={() => handleClick(x)}\n      >\n        <time dateTime={x.date.toLocaleDateString()} style={timeStyle(x)}>\n          {x.text}\n        </time>\n      </button>\n    );\n  });\n  return <div className=\"date-grid\">{days}</div>;\n}\n\nfunction RightArrow() {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 16 16\"\n      className=\"bi bi-arrow-right\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M10.146 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L12.793 8l-2.647-2.646a.5.5 0 0 1 0-.708z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2 8a.5.5 0 0 1 .5-.5H13a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8z\"\n      />\n    </svg>\n  );\n}\nfunction LeftArrow() {\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 16 16\"\n      className=\"bi bi-arrow-left\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.854 4.646a.5.5 0 0 1 0 .708L3.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2.5 8a.5.5 0 0 1 .5-.5h10.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n      />\n    </svg>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}